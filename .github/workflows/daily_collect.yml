name: Weekly News Collection

on:
  # 매주 월요일 오전 8시 KST (= UTC 23:00 일요일) 실행
  schedule:
    - cron: '0 23 * * 0'  # UTC 23:00 일요일 = KST 08:00 월요일
  
  # 수동 실행 가능
  workflow_dispatch:

jobs:
  collect:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 저장소 체크아웃
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: 🐍 Python 설정
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        cache: 'pip'
    
    - name: 📦 의존성 설치
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: 🌐 환경변수 설정
      run: |
        echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> .env
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
    
    - name: 📰 뉴스 수집 실행
      run: |
        python main.py
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
    
    - name: 📊 결과 확인
      run: |
        if [ -f "data/articles.json" ]; then
          echo "✅ 수집 완료!"
          ARTICLE_COUNT=$(python -c "import json; data=json.load(open('data/articles.json')); print(len(data.get('articles', [])))")
          echo "수집된 글 개수: $ARTICLE_COUNT"
        else
          echo "❌ articles.json 파일이 없습니다."
          exit 1
        fi
    
    - name: 💾 변경사항 커밋 및 푸시
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "GitHub Actions Bot"
        
        # data 디렉토리의 변경사항만 추가
        git add data/articles*.json
        
        # 변경사항이 있는 경우에만 커밋
        if git diff --staged --quiet; then
          echo "변경사항 없음"
        else
          CURRENT_DATE=$(TZ='Asia/Seoul' date '+%Y-%m-%d %H:%M KST')
          git commit -m "📰 자동 수집: $CURRENT_DATE"
          git push
          echo "✅ 커밋 및 푸시 완료"
        fi
    
    - name: 📋 수집 통계
      if: always()
      run: |
        echo "=== 수집 통계 ==="
        if [ -f "data/articles.json" ]; then
          python -c "
import json
from datetime import datetime

with open('data/articles.json', 'r', encoding='utf-8') as f:
    data = json.load(f)
    
articles = data.get('articles', [])
print(f'📊 총 글 개수: {len(articles)}')
print(f'📅 수집 날짜: {data.get(\"date\", \"N/A\")}')

# 소스별 통계
sources = {}
for article in articles:
    source = article.get('source', 'unknown')
    sources[source] = sources.get(source, 0) + 1

print('\\n📰 소스별 분포:')
for source, count in sorted(sources.items(), key=lambda x: x[1], reverse=True):
    print(f'  - {source}: {count}개')
"
        else
          echo "❌ 수집 파일 없음"
        fi

