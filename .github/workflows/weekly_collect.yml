name: Weekly News Collection

on:
  # 매주 월요일 오전 8시 KST (= UTC 23:00 일요일) 실행
  schedule:
    - cron: '0 23 * * 0'  # UTC 23:00 일요일 = KST 08:00 월요일
  
  # 수동 실행 가능
  workflow_dispatch:

jobs:
  collect:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 저장소 체크아웃
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: 🐍 Python 설정
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        cache: 'pip'
    
    - name: 📦 의존성 설치
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: 🌐 환경변수 설정
      run: |
        echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> .env
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
    
    - name: 📰 뉴스 수집 실행
      run: |
        python -c "from processors.pipeline import run_ds_news_pipeline; import logging; logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'); stats = run_ds_news_pipeline(); print(f'\n===== 수집 완료 ====='); print(f'수집: {stats[\"original_articles\"]}개 → 필터링: {stats[\"filtered_articles\"]}개 → 번역: {stats[\"translated_articles\"]}개 → 요약: {stats[\"summarized_articles\"]}개 → 저장: {stats[\"final_articles\"]}개'); print(f'소요시간: {stats.get(\"total_duration_str\", \"N/A\")}')"
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
    
    - name: 📊 결과 확인
      run: |
        if [ -f "data/articles.json" ]; then
          echo "✅ 수집 완료!"
          ARTICLE_COUNT=$(python -c "import json; data=json.load(open('data/articles.json')); print(len(data.get('articles', [])))")
          echo "수집된 글 개수: $ARTICLE_COUNT"
        else
          echo "❌ articles.json 파일이 없습니다."
          exit 1
        fi
    
    - name: 💾 변경사항 커밋 및 푸시
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "GitHub Actions Bot"
        
        # 날짜별 히스토리 파일만 추가 (articles_YYYY-MM-DD.json)
        git add data/articles_*.json 2>/dev/null || echo "날짜별 파일 없음"
        
        # 변경사항이 있는 경우에만 커밋
        if git diff --staged --quiet; then
          echo "변경사항 없음"
        else
          CURRENT_DATE=$(TZ='Asia/Seoul' date '+%Y-%m-%d %H:%M KST')
          git commit -m "📰 주간 자동 수집: $CURRENT_DATE"
          git push
          echo "✅ 커밋 및 푸시 완료"
        fi
    
    - name: 📋 수집 통계
      if: always()
      run: |
        echo "=== 수집 통계 ==="
        if [ -f "data/articles.json" ]; then
          ARTICLE_COUNT=$(python -c "import json; data=json.load(open('data/articles.json')); print(len(data.get('articles', [])))")
          COLLECT_DATE=$(python -c "import json; data=json.load(open('data/articles.json')); print(data.get('date', 'N/A'))")
          echo "📊 총 글 개수: $ARTICLE_COUNT"
          echo "📅 수집 날짜: $COLLECT_DATE"
        else
          echo "❌ 수집 파일 없음"
        fi

